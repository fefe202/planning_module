type Item;
type Layer;

fluent boolean layer(Item i, Layer l);
fluent integer lastTimePainted(Item i);
fluent boolean canPaint(Item i);
fluent integer time;
fluent boolean free;

constant boolean next(Layer l1, Layer l2);
constant integer DURATION;
constant integer MIN;
constant integer MAX;


// faccio durare l'azione DURATION + MIN, nel frattempo inizio a pitturare e 
// dopo aver trascorso un tempo pari al tempo necessario a pitturare setto
// al pittore le mani libere ([start + DURATION] free := true;), ma canPaint(obj)
// lo setto solo a fine azione, dove sar√† trascorso il tempo minimo per ricominciare
// a pitturare l'oggetto obj.
//
// rimane il dubbio sull'aggiornamento corretto di lastTimePainted
// che credo dovrebbe essere inizializzato a time + DURATION - MIN, ma aggiungere
// MIN al calcolo fa impazzire il solver.
action paint(Item obj, Layer a, Layer b) 
{

  duration := DURATION + MIN;

  [start] free == true and canPaint(obj) == true;
  [start] (a == l0) or (time - lastTimePainted(obj)) <= MAX;
  [start] next(a, b) == true;
  [start] layer(obj, a) == true;

  [start] free := false;
  [start] canPaint(obj) := false;

  [start + DURATION] free := true;
  [start + DURATION] layer(obj, b) := true;

  [start + DURATION] lastTimePainted(obj) := time + DURATION;
  [end] time := time + DURATION + MIN;
  [end] canPaint(obj) := true;
};


action incrementTime()
{

  duration := 1;
  [end] time := time + 1;
  
};


instance Item i1, i2, i3, i4, i5;
instance Layer l0, l1, l2;

DURATION := 3;
MIN      := 2;
MAX      := 6;

next(l0, l1) := true;
next(l1, l2) := true;

[start] time := 0;

//[start] canPaint(i1) := true;
//[start] canPaint(i2) := true;
[start] forall(Item i) { canPaint(i) := true; };

//[start] lastTimePainted(i1) := -1;
//[start] lastTimePainted(i2) := -1;
[start] forall(Item i) { lastTimePainted(i) := -1; };

[start] forall(Item i) {layer(i, l0) := true;};
[start] forall(Item i) {layer(i, l1) := false;};
[start] forall(Item i) {layer(i, l2) := false;};

[start] free := true;

//[end] layer(i1, l2) == true;
//[end] layer(i2, l2) == true;
[end] forall(Item i) { layer(i, l2) == true; };